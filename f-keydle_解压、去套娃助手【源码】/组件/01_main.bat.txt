@echo off
rem -----编码：ANSI-----
setlocal enabledelayedexpansion
title 清除文件夹单链套娃_与_解多层压缩【主程序】

rem 根据系统是64位还是32位准备兼容的bandizip。统一复制成“Bandizip.exe”然后在后面需要时启动，这对压缩失败检测工具根据进程名称锁定窗口有帮助。
rem 下面两个MD5的值如果升级bandizip，也需要更改。【bandizip_x64_md5】对应“Bandizip.x64.exe”；【bandizip_x86_md5】对应“Bandizip.x86.exe”
set bandizip_x64_md5=f3e915565df5a4ce17888d7c598cf93a
set bandizip_x86_md5=dea38e4d44fe61b231b8e9e925403c63
if exist "%windir%\SysWOW64" (
    rem 检查是否存在bandizip
    if exist "BandizipPro_portable\Bandizip.exe" (
        rem 如果存在，检验是不是64位的。
        certutil -hashfile "BandizipPro_portable\Bandizip.exe" md5 | find "!bandizip_x64_md5!" > nul
        rem 如果不是，就需要覆盖；是的话当然什么也不用做
        if !errorlevel! NEQ 0 (
            rem 需要先删除，如果直接copy会访问失败。
            del /f /q "BandizipPro_portable\Bandizip.exe"
            copy /y "BandizipPro_portable\Bandizip.x64.exe" "BandizipPro_portable\Bandizip.exe" > nul
        )
        rem 不存在就复制一份
    ) else (
        copy /y "BandizipPro_portable\Bandizip.x64.exe" "BandizipPro_portable\Bandizip.exe" > nul
    )
) else (
    rem 检查是否存在bandizip
    if exist "BandizipPro_portable\Bandizip.exe" (
        rem 如果存在，检验是不是32位的。
        certutil -hashfile "BandizipPro_portable\Bandizip.exe" md5 | find "!bandizip_x86_md5!" > nul
        rem 如果不是，就需要覆盖；是的话当然什么也不用做
        if !errorlevel! NEQ 0 (
            rem 需要先删除，如果直接copy会访问失败。
            del /f /q "BandizipPro_portable\Bandizip.exe"
            copy /y "BandizipPro_portable\Bandizip.x86.exe" "BandizipPro_portable\Bandizip.exe" > nul
        )
        rem 不存在就复制一份
    ) else (
        copy /y "BandizipPro_portable\Bandizip.x86.exe" "BandizipPro_portable\Bandizip.exe" > nul
    )
)
goto receive

:receive
echo 请将需要处理的文件夹拖入窗口（接收文件夹的地址），之后按回车。
echo 如果需要退出，确保看到此消息后直接按回车，不要拖入文件夹或输入任何内容。
set input=<nul
set /p input=
if not defined input (exit)
rem 统一去掉两侧的双引号，方便下面确定盘符。
set target_path=%input:"=%
set origin_path=%~dp0
rem “dp0”末尾自带“\”，下面这一步去掉它。
set origin_path=!origin_path:~0,-1!
rem 去掉英文双引号干扰后，盘符就是第一第二个字符。
set target_drivename=%target_path:~0,2%
set origin_drivename=%~d0

if exist "!target_path!" (
    cls
    goto process
) else (
    echo 目标文件夹不存在，请重试
    goto receive
)

:process
cd\
%origin_drivename%
cd "%origin_path%"

echo 正在处理中，请耐心等待……

rem 把目标文件夹所有者改为所有管理员，为下面的授权铺路
rem 即使里面的项目带有“系统”、“隐藏”属性，且对everyone拒绝一切访问，经过实验，takeown也能起效。
takeown /f "!target_path!" /A > nul

rem 经过reset之后，得到的就全是继承的权限了，其余权限都被删除。
icacls "!target_path!" /reset > nul

rem 再把这些继承的权限删除，这个文件夹的权限就清空了
icacls "!target_path!" /inheritance:r > nul

rem 再给everyone授予目标文件夹完全控制权限并向下继承：“:(CI)(OI)(F)”，权限“标杆”就立好了，
rem 在这个文件夹下的所有文件只需要reset，就能将访问权限替换为这个文件夹的访问权限，这样就不会存在任何访问限制。
icacls "!target_path!" /grant "everyone":(OI)(CI)(F) > nul

rem 以防万一，可能真的有人会开启显示“隐藏”和“系统”属性的文件，然后再手动输入或者拖进来。
attrib -S -H "!target_path!" > nul


rem 开始往这个文件夹中“塞”文件
rem 可能是不同盘符，这种情况不能用硬链接。
if not exist "!target_path!\_bdzip_core_address_.txt" (echo "%origin_path%\BandizipPro_portable\Bandizip.exe">"!target_path!\_bdzip_core_address_.txt")
if not exist "!target_path!\_taskbar_refresh_tool_.txt" (echo "%origin_path%\_刷新任务栏_.exe">"!target_path!\_taskbar_refresh_tool_.txt")
if not exist "!target_path!\_origin_path_.txt" (echo "%origin_path%">"!target_path!\_origin_path_.txt")
rem 密码【_password_.txt】的写入安排在下面
if not exist "!target_path!\_解压成功失败检测器_.exe" (copy /y "_解压成功失败检测器_.exe" "!target_path!\">nul)
if not exist "!target_path!\_child_excuter_1.bat" (copy /y "01_child.bat" "!target_path!\_child_excuter_1.bat">nul)



rem 读取配置文件
rem 获取“密码起始线”的行数
set /a password_start_line=0
set /a line=0
for /f "delims=" %%t in (配置解压密码和配置删除指定文件.txt) do (
    set /a line+=1
    if "%%t"=="------------------------ 密码起始线 ------------------------" (set /a password_start_line=!line!)
)

rem 获取“密码终止线”的行数
set /a password_end_line=0
set /a line=0
for /f "delims=" %%t in (配置解压密码和配置删除指定文件.txt) do (
    set /a line+=1
    if "%%t"=="------------------------ 密码终止线 ------------------------" (set /a password_end_line=!line!)
)

rem 检查错误
set /a detect_err=0
rem 线不存在或被更改
if !password_start_line! EQU 0 (set /a detect_err=1)
if !password_end_line! EQU 0 (set /a detect_err=1)
rem 顺序颠倒
if !password_end_line! LSS !password_start_line! (set /a detect_err=1)
rem 如有错误，处理错误。
if !detect_err! NEQ 0 (goto error)

rem 检查两条线之间是否存在密码。
set /a have_password=0
set /a tmp=!password_end_line! - !password_start_line!
if !tmp! GTR 1 (set /a have_password=1)

rem 有密码，就将密码筛选出来写入目标目录下的“_password_.txt”供“子”执行器调用。
if !have_password! EQU 1 (
    rem 创建密码记录文件
    cd.>"!target_path!\_password_.txt"
    rem 把密码筛选出来写入这个文件
    set /a line=0
    set readed_password=<nul
    for /f "delims=" %%t in (配置解压密码和配置删除指定文件.txt) do (
        set /a line+=1
        rem 起始终止线之间
        if !line! GTR !password_start_line! (
            if !line! LSS !password_end_line! (
                set readed_password=%%t
                echo !readed_password!>>"!target_path!\_password_.txt"
                rem 下面这句的作用是写入换行符。
                echo.>>"!target_path!\_password_.txt"
            )
        )
    )

    cd\
    %target_drivename%
    cd "%target_path%"

    rem 启动刚刚复制过来的“子”执行器
    start "【指定的窗口标题】" /min /wait "_child_excuter_1.bat"

 rem 针对没有密码的情况
) else (
    rem 蒙一个最常用的密码
    echo 123456>"!target_path!\_password_.txt"
    
    cd\
    %target_drivename%
    cd "%target_path%"

    rem 启动刚刚复制过来的“子”执行器
    start "【指定的窗口标题】" /min /wait "_child_excuter_1.bat"
)


cd\
%target_drivename%
cd "%target_path%"

rem 执行清理工作
del /f /s /q "_bdzip_core_address_.txt" >nul 2>nul
del /f /s /q "_taskbar_refresh_tool_.txt" >nul 2>nul
del /f /s /q "_解压成功失败检测器_.exe" >nul 2>nul
del /f /s /q "_password_.txt" >nul 2>nul
del /f /s /q "_origin_path_.txt" >nul 2>nul
del /f /s /q "_child_excuter_1.bat" >nul 2>nul
del /f /s /q "_folder_names_record_.txt" >nul 2>nul
del /f /s /q "_checker_record_.txt" >nul 2>nul
rem "_current_path_.txt"被移走到detector目录下了，不需要清理

cd\
%origin_drivename%
cd "%origin_path%"

rem 进行用户定义的删除指定文件操作，读取配置
rem 获取“删除指定文件起始线”的行数
set /a del_f_start_line=0
set /a line=0
for /f "delims=" %%t in (配置解压密码和配置删除指定文件.txt) do (
    set /a line+=1
    if "%%t"=="-------------------- 删除指定文件起始线 --------------------" (set /a del_f_start_line=!line!)
)

rem 获取“删除指定文件终止线”的行数
set /a del_f_end_line=0
set /a line=0
for /f "delims=" %%t in (配置解压密码和配置删除指定文件.txt) do (
    set /a line+=1
    if "%%t"=="-------------------- 删除指定文件终止线 --------------------" (set /a del_f_end_line=!line!)
)

rem 检查错误
set /a detect_err=0
rem 线不存在或被更改
if !del_f_start_line! EQU 0 (set /a detect_err=1)
if !del_f_end_line! EQU 0 (set /a detect_err=1)
rem 顺序颠倒
if !del_f_end_line! LSS !del_f_start_line! (set /a detect_err=1)
rem 如有错误，处理错误。
if !detect_err! NEQ 0 (goto error)

rem 检查两条线间是否有指定删除的内容
set /a have_something_to_delete=0
set /a tmp=!del_f_end_line! - !del_f_start_line!
if !tmp! GTR 1 (set /a have_something_to_delete=1)

rem 如果有，以删除的内容为循环，每次分配一个删除内容，然后操作；如果没有，就可以防止无用的循环。
if !have_something_to_delete! EQU 1 (
    set /a line=0
    for /f "delims=" %%t in (配置解压密码和配置删除指定文件.txt) do (
        set /a line+=1
        rem 起始终止线之间
        if !line! GTR !del_f_start_line! (
            if !line! LSS !del_f_end_line! (
                set del_content=%%t

                rem 删除操作是在目标目录里的，考虑方便，直接借鉴了密码循环的那部分。
                cd\
                %target_drivename%
                cd "%target_path%"

                rem 删除指定文件
                del /f /s /q "!del_content!" >nul 2>nul

                rem 循环for里引用的“配置解压密码和配置删除指定文件.txt”在这个bat文件的目录里，
                rem 这里不清楚for里面的t变量是否是一开始就全部从文件中读取、列出安排好的，所以要返回原目录。
                cd\
                %origin_drivename%
                cd "%origin_path%"
            )
        )    
    )
    
)
cls
goto receive

:error
echo 配置文件发生错误，请检查“配置解压密码和配置删除指定文件.txt”中
echo 的4条线，或者尝试重置配置，接下来按任意键退出。
@pause>nul
exit

